@startuml sequence_diagram
actor User
participant FlutterApp
participant FlaskAPI
participant GeminiAPI
database FireBase

== Create schedule ==
User -> FlutterApp: access
FlutterApp -> FlaskAPI: Init data - /createSchedule
FlaskAPI -> GeminiAPI: AI request prompt(text)
GeminiAPI --> FlaskAPI: AI response data
FlaskAPI -> FireBase: Store data
FlaskAPI --> FlutterApp: Be response data

== Update schedule ==
User -> FlutterApp: prompt(text)
FlutterApp -> FlaskAPI: update data - /updateSchedule
FlaskAPI -> FireBase: Get store data
FireBase --> FlaskAPI: Store data
FlaskAPI -> GeminiAPI: AI request prompt(text)
GeminiAPI --> FlaskAPI: AI response data
FlaskAPI --> FlutterApp: Be response data
FlutterApp --> User: Confirm

== Approval schedule ==
alt ok
  User -> FlutterApp: OK
  FlutterApp -> FlaskAPI: Resend Be response data
  FlaskAPI -> FireBase: Store data(only update tasks)
  FlutterApp -> User: Rebuild using new data
else ng
  User -> FlutterApp: NG
  FlutterApp -> User: Rebuild using old data
end

@enduml